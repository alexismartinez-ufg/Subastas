trigger:
- main

pool:
  name: Default  # Agente auto-hospedado

variables:
  AZP_AGENT_CLEANUP_PSMODULES_IN_POWERSHELL: true
  solution: '**/*.sln'
  buildConfiguration: 'Release'

steps:
# Restaurar código del repositorio
- checkout: self
  fetchDepth: 0

# Usar .NET SDK 8
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.x'

# Restaurar paquetes NuGet
- task: DotNetCoreCLI@2
  displayName: 'Restaurar paquetes NuGet'
  inputs:
    command: 'restore'
    projects: '$(solution)'

# Preparar análisis con SonarCloud
- task: SonarCloudPrepare@3
  displayName: 'Preparar análisis con SonarCloud'
  inputs:
    SonarQube: 'SonarQb'
    organization: 'iaalexismartinez'
    scannerMode: 'dotnet'
    projectKey: 'iaalexismartinez_Subasta-UFG'
    projectName: 'Subasta-UFG'

# Compilar solución
- task: DotNetCoreCLI@2
  displayName: 'Compilar solución'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

# Ejecutar pruebas y generar cobertura
- task: DotNetCoreCLI@2
  displayName: 'Ejecutar pruebas unitarias con cobertura'
  inputs:
    command: 'test'
    projects: 'src/Subastas/Subastas.Test/Subastas.Test.csproj'
    arguments: '--no-build --no-restore --configuration Release --collect:"XPlat Code Coverage"'
    testRunTitle: 'Unit Test'

#Verificación de versión de PowerShell
- task: PowerShell@2
  displayName: 'Verificar versión de PowerShell'
  inputs:
    targetType: 'inline'
    script: |
      $ErrorActionPreference = "Stop"
      Remove-Module Microsoft.PowerShell.Security -ErrorAction SilentlyContinue
      $PSVersionTable
    pwsh: true

#Pre ejecución de pruebas de Jmter
- task: PowerShell@2
  displayName: 'Pre ejecución de pruebas de JMeter - Limpiar pujas'
  inputs:
    targetType: 'filePath'
    filePath: '$(CleanJmterScript)'
    pwsh: true


# Ejecutar prueba de carga con JMeter
- task: PowerShell@2
  displayName: 'Ejecutar prueba de carga con JMeter'
  inputs:
    targetType: 'inline'
    script: |
      $ErrorActionPreference = "Stop"
      Remove-Module Microsoft.PowerShell.Security -ErrorAction SilentlyContinue
      & "$(jmeterPathVal)" -n -t "$(jmxFileVal)"
    pwsh: true

# Analizar con SonarCloud
- task: SonarCloudAnalyze@3
  displayName: 'Analizar con SonarCloud'
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

# Publicar resultados SonarCloud
- task: SonarCloudPublish@3
  displayName: 'Publicar resultados SonarCloud'
  inputs:
    pollingTimeoutSec: '300'

# Ejecutar OWASP Dependency-Check
- task: PowerShell@2
  displayName: 'Ejecutar OWASP Dependency-Check'
  inputs:
    targetType: 'inline'
    script: |
      $ErrorActionPreference = "Stop"
      & "$(OwaspDependencyPath)" --project "Subastas" -s "$(SubastasBinariesPath)" -o "$(OwaspResultPath)"
    pwsh: true

# Ejecutar OWASP ZAP y generar PDF
- task: PowerShell@2
  displayName: 'Ejecutar OWASP ZAP y generar PDF'
  inputs:
    targetType: 'inline'
    script: |
      $ErrorActionPreference = "Stop"
      java -Xmx512m -jar "$(OwaspZapPath)" -cmd -quickurl http://localhost -quickout "$(OwaspResultPath)\Subastas-zap-report.html"
    pwsh: true

# Publicar artefactos de resultados OWASP
- task: PublishBuildArtifacts@1
  displayName: 'Publicar artefactos de OWASP'
  inputs:
    PathtoPublish: '$(OwaspResultPath)'
    ArtifactName: 'OWASP-Reports'
    publishLocation: 'Container'

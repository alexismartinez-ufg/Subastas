trigger:
- main

pool:
  name: Default  # Agente auto-hospedado (tu laptop)

variables:
  solution: '**/*.sln'
  buildConfiguration: 'Release'

steps:
# Restaurar código del repositorio
- checkout: self
  fetchDepth: 0

# Usar .NET SDK 8 (asegúrate de tenerlo instalado en tu máquina)
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.x'

# Restaurar paquetes NuGet
- task: DotNetCoreCLI@2
  displayName: 'Restaurar paquetes NuGet'
  inputs:
    command: 'restore'
    projects: '$(solution)'

# Preparar análisis con SonarCloud
- task: SonarCloudPrepare@3
  displayName: 'Preparar análisis con SonarCloud'
  inputs:
    SonarQube: 'SonarQb'  # Debes haber configurado este servicio en Azure DevOps
    organization: 'iaalexismartinez'
    scannerMode: 'dotnet'
    projectKey: 'iaalexismartinez_Subasta-UFG'
    projectName: 'Subasta-UFG'

# Compilar solución
- task: DotNetCoreCLI@2
  displayName: 'Compilar solución'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

# Ejecutar pruebas y generar cobertura
- task: DotNetCoreCLI@2
  displayName: 'Ejecutar pruebas unitarias con cobertura'
  inputs:
    command: 'test'
    projects: 'src/Subastas/Subastas.Test/Subastas.Test.csproj'
    arguments: '--collect:"XPlat Code Coverage"'
    testRunTitle: 'Unit Test'


# Analizar con SonarCloud
- task: SonarCloudAnalyze@3
  displayName: 'Analizar con SonarCloud'
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

# Publicar resultados SonarCloud
- task: SonarCloudPublish@3
  displayName: 'Publicar resultados SonarCloud'
  inputs:
    pollingTimeoutSec: '300'
    failWhenQualityGateFails: true 
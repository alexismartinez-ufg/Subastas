@model Subastas.Dto.UsuarioCuentaViewModel

@{
    ViewData["Title"] = "Detalles";
}

<div class="create">
    <div class="justify-content-left btn-return">
        <img src="/assets/img/icons/returnIcon.png" alt="Regresar" height="40px">
        <a asp-action="Index">Regresar</a>
    </div>
    <br />
    <h1>Detalles</h1>
    <div class="container">
        <div class="row">
            <div class="col-md-6 mb-4">
                <h4>Usuario</h4>
                <div class="form-group mb-2">
                    <label class="control-label">@Html.DisplayNameFor(model => model.Usuario.NombreUsuario)</label>
                    <p class="form-control-static">@Html.DisplayFor(model => model.Usuario.NombreUsuario)</p>
                </div>
                <div class="form-group mb-2">
                    <label class="control-label">@Html.DisplayNameFor(model => model.Usuario.ApellidoUsuario)</label>
                    <p class="form-control-static">@Html.DisplayFor(model => model.Usuario.ApellidoUsuario)</p>
                </div>
                <div class="form-group mb-2">
                    <label class="control-label">@Html.DisplayNameFor(model => model.Usuario.CorreoUsuario)</label>
                    <p class="form-control-static">@Html.DisplayFor(model => model.Usuario.CorreoUsuario)</p>
                </div>
                <div class="form-group mb-2">
                    <label class="control-label">@Html.DisplayNameFor(model => model.Usuario.EstaActivo)</label>
                    <p class="form-control-static">@Html.DisplayFor(model => model.Usuario.EstaActivo)</p>
                </div>
            </div>

            <div class="col-md-6 mb-4">
                <h4>Cuenta</h4>
                <div class="form-group mb-2">
                    <label class="control-label">Saldo</label>
                    <p class="form-control-static">$@Model.Cuenta.Saldo.ToString("N2")</p>
                </div>
                <div class="form-group mb-2">
                    <label class="control-label">Cuenta Activa</label>
                    <p class="form-control-static">@Model.Cuenta.EstaActivo</p>
                </div>
                <div class="form-group">
                    <button type="button" class="btn btn-dark" onclick="showPayPalModal()">Cargar Saldo con PayPal</button>
                </div>
            </div>
        </div>
        <div class="form-group text-center">
            <a asp-action="Edit" asp-route-id="@Model.Usuario.IdUsuario" class="btn btn-primary">Editar</a>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function showPayPalModal() {
            $.getJSON('@Url.Action("GetClientId", "PayPal")', function (data) {
                Swal.fire({
                    title: 'Cargar Saldo con PayPal',
                    html: `
                                <input type="number" id="amount" class="swal2-input" placeholder="Ingrese el monto" min="1">
                                <div id="paypal-button-container"></div>
                            `,
                    showCancelButton: true,
                    showConfirmButton: false,
                    cancelButtonText: 'Cancelar',
                    didOpen: () => {
                        const amountInput = Swal.getPopup().querySelector('#amount');

                        // Load the PayPal SDK
                        const script = document.createElement('script');
                        script.src = `https://www.paypal.com/sdk/js?client-id=${data.clientId}&components=buttons,marks,funding-eligibility`;
                        script.onload = function () {
                            paypal.Buttons({
                                createOrder: function (data, actions) {
                                    const amount = amountInput.value;
                                    if (!amount || amount <= 0) {
                                        Swal.showValidationMessage('Por favor, ingrese un monto válido');
                                        return;
                                    }
                                    return actions.order.create({
                                        purchase_units: [{
                                            amount: {
                                                value: amount,
                                                currency_code: 'USD' // Especifica la moneda
                                            }
                                        }]
                                    });
                                },
                                onApprove: function (data, actions) {
                                    return actions.order.capture().then(function (details) {
                                        // Llamada AJAX para cargar el monto a la cuenta del usuario
                                        const userId = '@Model.Usuario.IdUsuario';
                                        const amount = Swal.getPopup().querySelector('#amount').value;

                                        $.ajax({
                                            url: '@Url.Action("CargarMonto", "Usuario")',
                                            type: 'POST',
                                            data: { userId: userId, monto: amount },
                                            success: function (response) {
                                                if (response.success) {
                                                    Swal.fire({
                                                        icon: 'success',
                                                        title: 'Transacción completada',
                                                        text: 'Gracias, ' + details.payer.name.given_name + '!'
                                                    }).then(() => {
                                                        location.reload();
                                                    });
                                                } else {
                                                    Swal.fire({
                                                        icon: 'error',
                                                        title: 'Error',
                                                        text: 'Hubo un problema al cargar el saldo. Inténtelo nuevamente.'
                                                    });
                                                    console.error('Error al cargar el monto:', response.message);
                                                }
                                            },
                                            error: function (jqXHR, textStatus, errorThrown) {
                                                Swal.fire({
                                                    icon: 'error',
                                                    title: 'Error',
                                                    text: 'Hubo un problema con el servidor. Por favor, inténtelo nuevamente.'
                                                });
                                                console.error('Error en la solicitud AJAX:', textStatus, errorThrown);
                                            }
                                        });
                                    });
                                },
                                onError: function (err) {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'Hubo un problema con el pago. Por favor, inténtelo nuevamente.'
                                    });
                                    console.error('Error de PayPal:', err);
                                }
                            }).render('#paypal-button-container');

                        };
                        document.head.appendChild(script);
                    }
                });
            });
        }
    </script>
}

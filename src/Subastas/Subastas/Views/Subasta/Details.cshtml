@using System.Security.Claims
@model Subastas.Domain.Subasta

@{
    ViewData["Title"] = !string.IsNullOrEmpty(Model.TituloSubasta) ? Model.TituloSubasta : "Subasta";
    bool isAdmin = User.IsInRole("Admin");
    bool isSubastaActiva = Model.EstaActivo;
}

<div class="container detalles-subastas mt-2">
    <div class="row pt-3 mt-3">
        <div class="container d-flex justify-content-left btn-return">
            <img src="/assets/img/icons/returnIcon.png" alt="Regresar" height="40px">
            <a asp-action="Index">Regresar</a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8 mt-3">
            <div class="container mt-4">
                <div class="card">
                    <div class="row no-gutters">
                        <div class="col-md-12 text-center" style="padding: 5px 30px">
                            <img src="@(Model?.IdProductoNavigation?.ImagenProducto)" class="card-img" alt="Imagen de la Subasta" style="max-width: 275px;">
                        </div>
                        <div class="col-md-12">
                            <div class="card-body">
                                <h5 class="card-title">@Model.TituloSubasta</h5>
                                <br />
                                <dl class="row">
                                    @if(Model.IdUsuario > 0 && Model.IdUsuarioNavigation != null)
                                    {
                                        <dt class="col-sm-4 detail-subastas"><img src="/assets/img/icons/ganadorSubasta.png" class="icon-details">Ganador:</dt>
                                        <dd class="col-sm-8 detail-subastas">@Model?.IdUsuarioNavigation?.NombreUsuario @Model?.IdUsuarioNavigation?.ApellidoUsuario</dd>
                                    }
                                    <dt class="col-sm-4 detail-subastas"><img src="/assets/img/icons/montoActualSubasta.png" class="icon-details">Monto Actual:</dt>
                                    <dd class="col-sm-8 detail-subastas" id="current-amount">$@(ViewBag.MaxMontoPuja ?? Model.MontoInicial)</dd>
                                    <br /><br /><br />
                                    <dt class="col-sm-12">Información de la subasta</dt>
                                    <br /><br />
                                    <dt class="col-sm-4 detail-subastas"><img src="/assets/img/icons/inicioSubasta.png" class="icon-details">Fecha de inicio:</dt>
                                    <dd class="col-sm-8 detail-subastas">@Model.FechaSubasta.ToString("dd/M/yyyy, H:mm:ss")</dd>
                                    <dt class="col-sm-4 detail-subastas"><img src="/assets/img/icons/finSubasta.png" class="icon-details">Fecha de fin:</dt>
                                    <dd class="col-sm-8 detail-subastas">@Model.FechaSubastaFin.ToString("dd/M/yyyy, H:mm:ss")</dd>
                                    <dt class="col-sm-4 detail-subastas"><img src="/assets/img/icons/idSubasta.png" class="icon-details">ID Subasta:</dt>
                                    <dd class="col-sm-8 detail-subastas">@Model.IdSubasta</dd>
                                    <dt class="col-sm-4 detail-subastas"><img src="/assets/img/icons/montoSubasta.png" class="icon-details">Monto Inicial:</dt>
                                    <dd class="col-sm-8 detail-subastas">$@Model.MontoInicial</dd>
                                    <dt class="col-sm-4 detail-subastas"><img src="/assets/img/icons/estadoSubasta.png" class="icon-details">Estado:</dt>
                                    <dd class="col-sm-8 detail-subastas">@(Model.EstaActivo ? "En Curso" : "Finalizada")</dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3 mt-3 tabla-pujas">
            <h4 class="monto" id="Valor-Max-Puja">$@ViewBag.MaxMontoPuja</h4>
            <h6>Última puja por:</h6>
            <h4 id="Usuario-Max-Puja">@ViewBag.NombreUsuarioMaxPuja</h4>
            <hr />
            <p> Incremento mínimo de puja: $<span id="Minimo-Max-Puja">@(ViewBag.MaxMontoPuja + 1)</span></p>
            <div class="container d-flex justify-content-center">
                <button class="btn-pujar" id="btnPujar">
                    <img src="/assets/img/icons/pujaIconWhite.png" alt="Icono Detalles" height="30px">
                    PUJAR
                </button>
            </div>
            <hr />
            <div style="max-height: 400px; overflow: auto;">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Usuario</th>
                            <th>Monto</th>
                            <th>Fecha de Pujada</th>
                        </tr>
                    </thead>
                    <tbody id="bid-table-body">
                        @foreach (var item in Model.Pujas.OrderByDescending(x => x.MontoPuja))
                        {
                            <tr>
                                <td>@item.IdUsuarioNavigation.NombreUsuario @item.IdUsuarioNavigation.ApellidoUsuario</td>
                                <td>$@item.MontoPuja</td>
                                <td>@item.FechaPuja.ToString("dd/M/yyyy, H:mm:ss")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @if (isAdmin && isSubastaActiva)
    {
        <div class="row pt-3 mt-3">
            <div class="container d-flex justify-content-center">
                <button class="btn btn-danger text-white mx-2" id="btnTerminarSubasta">Terminar Subasta</button>
            </div>
        </div>
    }

    <!-- Contenedor del chat -->
    <div id="chat-container" class="chat-container">
        <div class="chat-header">
            <h4>Chat</h4>
            <button id="close-chat">X</button>
        </div>
        <div class="chat-body">
            <div class="flex-grow-1 overflow-auto" id="chat-messages">
                <!-- Aquí van los mensajes del chat -->
            </div>
            <div class="mt-1">
                <div class="input-group">
                    <input type="text" class="form-control" id="chat-input" placeholder="Escribe tu mensaje...">
                    <div class="input-group-append">
                        <button class="btn-send-message" type="button">Enviar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const openChatBtn = document.getElementById("open-chat");
            const chatContainer = document.getElementById("chat-container");
            const closeChatBtn = document.getElementById("close-chat");

            openChatBtn.addEventListener("click", function () {
                chatContainer.style.display = "block";
                openChatBtn.style.display = "none";
            });

            closeChatBtn.addEventListener("click", function () {
                chatContainer.style.display = "none";
                openChatBtn.style.display = "block";
            });
        });
    </script>


    <!-- Botón para abrir el chat -->
    <div id="open-chat" class="open-chat">
        <button class="btn-chat"><img src="/assets/img/icons/chatIcon.png" alt="Chat" height="30px" style="margin-right:10px">Chat</button>
    </div>

    <div class="container mt-2">
        <div class="row">
            <div class="container-participantes" style="max-height: 400px; min-height: 400px; overflow-y: auto;">
                <h4>Participantes de la Subasta</h4>
                <hr />
                <table class="table participants-table">
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>Email</th>
                            <th>Fecha de Participación</th>
                        </tr>
                    </thead>
                    <tbody id="participants-table-body">
                        @foreach (var item in Model.ParticipantesSubasta)
                        {
                            <tr>
                                <td>@item.IdUsuarioNavigation.NombreUsuario</td>
                                <td>@item.IdSubastaNavigation.IdUsuarioNavigation.CorreoUsuario</td>
                                <td>@Model.FechaSubasta</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>

    <script>
        let unparsedUser = "@User.Identity.Name";
        let currentUser = new DOMParser().parseFromString(unparsedUser, "text/html").documentElement.textContent;
        let currentSubastaId = "@Model.IdSubasta";
        let isSubastaActiva = @(isSubastaActiva ? "true" : "false");

        let currentPujaAmount;

        document.getElementById("btnPujar").addEventListener("click", function () {
            if (isSubastaActiva) {
                Swal.fire({
                    title: 'Ingrese su puja',
                    input: 'number',
                    inputAttributes: {
                        min: parseFloat(document.getElementById("current-amount").innerText.replace('$', '')) + 1,
                        step: 1
                    },
                    showCancelButton: true,
                    confirmButtonText: 'Pujar',
                    showLoaderOnConfirm: true,
                    preConfirm: (amount) => {
                        return fetch('/Pujas/Create', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                            },
                            body: JSON.stringify({
                                IdSubasta: @Model.IdSubasta,
                                MontoPuja: amount,
                                IdUsuario: @User.FindFirst(ClaimTypes.NameIdentifier)?.Value
                                    })
                        })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error(response.statusText);
                                }
                                return response.json();
                            })
                            .catch(error => {
                                Swal.showValidationMessage(
                                    `Request failed: ${error}`
                                );
                            });
                    },
                    allowOutsideClick: () => !Swal.isLoading()
                }).then((result) => {
                    if (result.isConfirmed) {
                        if (result.value != undefined && result.value.success) {
                            connection.invoke("SendBid", currentUser, result.value.montoPuja, currentSubastaId).catch(function (err) {
                                return console.error(err.toString());
                            });

                            Swal.fire({
                                title: 'Puja exitosa!',
                                text: `Su puja de $${result.value.montoPuja} fue aceptada.`,
                                icon: 'success',
                                allowOutsideClick: false,
                                allowEscapeKey: false,
                                confirmButtonText: 'Aceptar'
                            }).then(() => {
                                const userMaxPuja = document.querySelector("#Usuario-Max-Puja");
                                const minMaxPuja = document.querySelector("#Minimo-Max-Puja");
                                const valorMaxPuja = document.querySelector("#Valor-Max-Puja");

                                userMaxPuja.innerText = currentUser;
                                valorMaxPuja.innerText = '$' + result.value.montoPuja + '.00';
                                minMaxPuja.innerText = (result.value.montoPuja + 1) + '.00';
                            });
                        } else {
                            Swal.fire({
                                title: 'Error en la puja',
                                text: `Ups... ${result.value.message}`,
                                icon: 'error'
                            });
                        }
                    }
                });
            }
        });

        let btnTerminar = document.getElementById("btnTerminarSubasta");

        if(btnTerminar != undefined){
            btnTerminar.addEventListener("click", function () {
                Swal.fire({
                    title: '¿Está seguro de que quiere terminar la subasta?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Sí, terminar',
                    cancelButtonText: 'No, cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('/Subasta/TerminarSubasta?idSubasta=' + currentSubastaId, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                            }
                        })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error(response.statusText);
                                }
                                return response.json();
                            })
                            .then(data => {
                                Swal.fire({
                                    title: 'Subasta terminada',
                                    text: 'La subasta ha sido terminada por el administrador.',
                                    icon: 'success',
                                    allowOutsideClick: false,
                                    allowEscapeKey: false,
                                    confirmButtonText: 'Aceptar'
                                }).then(() => {
                                    location.reload();
                                });
                            })
                            .catch(error => {
                                Swal.fire(
                                    'Error',
                                    `Hubo un problema al terminar la subasta: ${error}`,
                                    'error'
                                );
                            });
                    }
                });
            });
        }
    </script>

    <script src="~/js/SubastaHub.js" asp-append-version="true"></script>
}

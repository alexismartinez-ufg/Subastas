@model IEnumerable<Subastas.Domain.Subasta>

@{
    ViewData["Title"] = "Subastas";
}

<link rel="stylesheet" href="~/css/SubastasIndex.css" asp-append-version="true" />

<h1>Subastas</h1>

<div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var item in Model)
    {
        <div class="col">
            <div class="card h-100" style="cursor: pointer;">
                <img src="@(item?.IdProductoNavigation?.ImagenProducto ?? "https://www.cruiseloloma.co.nz/wp-content/uploads/2014/12/placeholder-400x300.jpg")"
                     class="card-img-top img-fixed-size" alt="@item.TituloSubasta">
                <div class="card-body" onclick="location.href='@Url.Action("Details", new { id = item.IdSubasta })'">
                    <h5 class="card-title">@item.TituloSubasta</h5>
                    <p class="card-text">Monto Inicial: @item.MontoInicial</p>
                    <p class="card-text">Activo: @(item.EstaActivo ? "Sí" : "No")</p>
                </div>
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <div class="card-footer text-center">
                        <a href="@Url.Action("Edit", new { id = item.IdSubasta })" class="btn btn-secondary text-white mx-2">Editar</a>
                        <button class="btn btn-danger text-white mx-2" onclick="deleteSubasta(@item.IdSubasta)">Eliminar</button>
                    </div>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function deleteSubasta(id) {
            Swal.fire({
                title: '¿Está seguro?',
                text: "¡No podrás revertir esto!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Sí, eliminar',
                cancelButtonText: 'Cancelar',
                preConfirm: () => {
                    return fetch('/Subasta/Delete/' + id, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        body: JSON.stringify({ id: id })
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(response.statusText);
                            }
                            return response.json();
                        })
                        .catch(error => {
                            Swal.showValidationMessage(
                                `Request failed: ${error}`
                            );
                        });
                },
                allowOutsideClick: () => !Swal.isLoading()
            }).then((result) => {
                if (result.isConfirmed) {
                    if (result.value != undefined && result.value.success) {
                        Swal.fire(
                            '¡Eliminado!',
                            'La subasta ha sido eliminada.',
                            'success'
                        ).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire(
                            'Error',
                            `Ups... ${result.value.errorMessage}`,
                            'error'
                        );
                    }
                }
            });
        }
    </script>
}
